Efficient and Robust Feature Selection via Joint l2,1-Norms MinimizationFeiping NieComputer Science and Engineering University of Texas at Arlington feipingnie@gmail.comXiao CaiComputer Science and Engineering University of Texas at Arlington xiao.cai@mavs.uta.eduHeng HuangComputer Science and Engineering University of Texas at Arlington heng@uta.eduChris DingComputer Science and Engineering University of Texas at Arlington chqding@uta.eduAbstractFeature selection is an important component of many machine learning applica- tions. Especially in many bioinformatics tasks, efficient and robust feature se- lection methods are desired to extract meaningful features and eliminate noisy ones. In this paper, we propose a new robust feature selection method with em- phasizing joint l2,1-norm minimization on both loss function and regularization. The l2,1-norm based loss function is robust to outliers in data points and the l2,1- norm regularization selects features across all data points with joint sparsity. An efficient algorithm is introduced with proved convergence. Our regression based objective makes the feature selection process more efficient. Our method has been applied into both genomic and proteomic biomarkers discovery. Extensive empir- ical studies are performed on six data sets to demonstrate the performance of our feature selection method.1 IntroductionFeature selection, the process of selecting a subset of relevant features, is a key component in build- ing robust machine learning models for classification, clustering, and other tasks. Feature section has been playing an important role in many applications since it can speed up the learning process, improve the mode generalization capability, and alleviate the effect of the curse of dimensional- ity [15]. A large number of developments on feature selection have been made in the literature and there are many recent reviews and workshops devoted to this topic, e.g., NIPS Conference [7].In past ten years, feature selection has seen much activities primarily due to the advances in bioin- formatics where a large amount of genomic and proteomic data are produced for biological and biomedical studies. For example, in genomics, DNA microarray data measure the expression levels of thousands of genes in a single experiment. Gene expression data usually contain a large number of genes, but a small number of samples. A given disease or a biological function is usually asso- ciated with a few genes [19]. Out of several thousands of genes to select a few of relevant genes thus becomes a key problem in bioinformatics research [22]. In proteomics, high-throughput mass spectrometry (MS) screening measures the molecular weights of individual biomolecules (such as proteins and nucleic acids) and has potential to discover putative proteomic biomarkers. Each spec- trum is composed of peak amplitude measurements at approximately 15,500 features represented by a corresponding mass-to-charge value. The identification of meaningful proteomic features from MS is crucial for disease diagnosis and protein-based biomarker profiling [22].1
In general, there are three models of feature selection methods in the literature: (1) filter meth- ods [14] where the selection is independent of classifiers, (2) wrapper methods [12] where the pre- diction method is used as a black box to score subsets of features, and (3) embedded methods where the procedure of feature selection is embedded directly in the training process. In bioinformatics applications, many feature selection methods from these categories have been proposed and applied. Widely used filter-type feature selection methods include F -statistic [4], reliefF [11, 13], mRMR [19], t-test, and information gain [21] which compute the sensitivity (correlation or relevance) of a feature with respect to (w.r.t) the class label distribution of the data. These methods can be char- acterized by using global statistical information. Wrapper-type feature selection methods is tightly coupled with a specific classifier, such as correlation-based feature selection (CFS) [9], support vec- tor machine recursive feature elimination (SVM-RFE) [8]. They often have good performance, but their computational cost is very expensive.Recently sparsity regularization in dimensionality reduction has been widely investigated and also applied into feature selection studies. l1-SVM was proposed to perform feature selection using the l1-norm regularization that tends to give sparse solution [3]. Because the number of selected features using l1-SVM is upper bounded by the sample size, a Hybrid Huberized SVM (HHSVM) was proposed combining both l1-norm and l2-norm to form a more structured regularization [26]. But it was designed only for binary classification. In multi-task learning, in parallel works, Obozinsky et. al. [18] and Argyriou et. al. [1] have developed a similar model for l2,1-norm regularization to couple feature selection across tasks. Such regularization has close connections to group lasso [28].In this paper, we propose a novel efficient and robust feature selection method to employ joint l2,1- norm minimization on both loss function and regularization. Instead of using l2-norm based loss function that is sensitive to outliers, a l2,1-norm based loss function is adopted in our work to remove outliers. Motivated by previous research [1, 18], a l2,1-norm regularization is performed to select features across all data points with joint sparsity, i.e. each feature (gene expression or mass-to-charge value in MS) either has small scores for all data points or has large scores over all data points. To solve this new robust feature selection objective, we propose an efficient algorithm to solve such joint l2,1-norm minimization problem. We also provide the algorithm analysis and prove the convergence of our algorithm. Extensive experiments have been performed on six bioinformatics data sets and our method outperforms five other commonly used feature selection methods in statistical learning and bioinformatics.2 Notations and DefinitionsWe summarize the notations and the definition of norms used in this paper. Matrices are written as boldface uppercase letters. Vectors are written as boldface lowercase letters. For matrix M = (mij ), its i-th row, j-th column are denoted by mi, mj respectively.􏰃􏰈 􏰄1 nppThe lp-norm of the vector v ∈􏰈Rn is defined as ∥v∥p = |vi| . The l0-norm of the vectori=1v ∈ Rn is defined as ∥v∥0 = |vi| . The Frobenius norm of the matrix M ∈ Rn×m is defined as􏰉􏰊􏰊􏰋􏰌n 􏰌m 􏰉􏰊􏰊􏰌n∥M∥F = m2ij =􏰋 ∥mi∥2. (1)i=1 j=1 i=1The l2,1-norm of a matrix was first introduced in [5] as rotational invariant l1 norm and also used for multi-task learning [1, 18] and tensor factorization [10]. It is defined asn0 i=1􏰌n 􏰉􏰊􏰊􏰋􏰌m∥M∥2,1 =i=1 j=12􏰌n 􏰂 􏰂m2ij =􏰂mi􏰂2, (2)i=1
which is rotational invariant for rows: ∥MR∥2,1 = ∥M∥2,1 for any rotational matrix R. The l2,1-norm can be generalized to lr,p-norm⎛⎛ ⎞p⎞1 􏰇 􏰍 rp1􏰌n 􏰌m 􏰌n 􏰂 􏰂 p∥M∥r,p=⎜⎝ ⎝ |mij|r⎠⎟⎠ = 􏰂mi􏰂pr . (3)i=1 j=1 i=1Note that lr,p-norm is a valid norm because it satisfies the three norm conditions, including thetriangle inequality ∥A∥􏰈 + ∥B∥ ≥􏰈∥A + B∥ . T􏰈his can be proved as follows. Starting from r,p r,p r,p111the triangle inequality ( i |ui|p)p + ( i |vi|p)p ≥ ( i |ui + vi|p)p and setting ui = ∥ai∥r and vi = ∥bi∥r, we obtain􏰇􏰍􏰇􏰌 􏰍p 􏰌 p 􏰌 p 􏰌 p11􏰇􏰍1􏰇􏰍1≥ | ∥ai∥r + ∥bi∥r|pHowever, the l0-norm is not a valid norm because it does not satisfy the positive scalability:3 Robust Feature Selection Based on l2,1-NormsLeast square regression is one of the popular methods for classification. Given training data {x1, x2, · · · , xn} ∈ Rd and the associated class labels {y1, y2, · · · , yn} ∈ Rc, traditional least square regression solves the following optimization problem to obtain the projection matrix W∈Rd×c andthebiasb∈Rc:min􏰌n 􏰂􏰂WTxi+b−yi􏰂􏰂2. (5)W,bi=1For simplicity, the bias b can be absorbed into W when the constant value 1 is added as an additional dimension for each data xi(1 ≤ i ≤ n). Thus the problem becomes:min􏰌n 􏰂􏰂WTxi−yi􏰂􏰂2. (6)Wi=1 In this paper, we use the robust loss function:min􏰌n 􏰂􏰂WTxi−yi􏰂􏰂2, (7)Wi=1where the residual ∥WT xi − yi∥ is not squared and thus outliers have less importance than the squared residual ∥WT xi − yi∥2. This loss function has a rotational invariant property while the pure l1-norm loss function does not has such desirable property [5].∥bi∥prEq. (4) is just ∥A∥r,p + ∥B∥r,p ≥ ∥A + B∥r,p.≥ | ∥ai + bi∥r|p , (4) ∥αv∥0 = |α|∥v∥0 for scalar α. The term “norm” here is for convenience.∥ai∥pr iiii+wherethesecondinequalityfollowsthetriangleinequalityforlr norm: ∥ai∥r+∥bi∥r ≥ ∥ai+bi∥r.We now add a regularization term R(W) with parameter γ. The problem becomes:min 􏰌n 􏰂􏰂WT xi − yi􏰂􏰂2 + γR(W).Wi=1 Several regularizations are possible:(8)i=12 􏰌c􏰌d 􏰂􏰂 i􏰂􏰂0w 2, R4(W)=i=1􏰌d 􏰂􏰂 i􏰂􏰂w 2. (9)R1(W)=∥W∥ , R2(W)=j=1∥wj∥1, R3(W)=R1(W) is the ridge regularization. R2(W) is the LASSO regularization. R3(W) and R4(W)penalizes all c regression coefficients corresponding to a single feature as a whole. This has the 3
effects of feature selection. Although the l0-norm of R3(W) is the most desirable [16], in this paper, we use R4(W) instead. The reasons are: (A) the l1-norm of R4(W) is convex and can be easily optimized (the main contribution of this paper); (B) it was shown that results of l0-norm is identical or approximately identical to the l1-norm results under practical conditions.Denote data matrix X = [x1,x2,··· ,xn] ∈ Rd×n and label matrix Y = [y1,y2,··· ,yn]T ∈ Rn×c. In this paper, we optimizemin J(W)=􏰌n 􏰂􏰂WTxi −yi􏰂􏰂2 +γR4(W)=􏰂􏰂XTW−Y􏰂􏰂2,1 +γ∥W∥2,1. (10)WIt seems that solving this joint l2,1-norm problem is difficult as both of the terms are non-smooth. Surprisingly, we will show in the next section that the problem can be solved using a simple yet efficient algorithm.i=14 An Efficient Algorithm4.1 Reformulation as A Constrained ProblemFirst, the problem in Eq. (10) is equivalent tomin 1 􏰂􏰂XT W − Y􏰂􏰂2,1 + ∥W∥2,1 , Wγ(11) (12)(13) γI 􏰁∈Rn×m and(14)This optimization problem Eq. (14) has been widely used in the Multiple Measurement Vector (MMV) model in signal processing community. It was generally felt that the l2,1-norm minimization problem is much more difficult to solve than the l1-norm minimization problem. Existing algorithms usually reformulate it as a second-order cone programming (SOCP) or semidefinite programming (SDP) problem, which can be solved by interior point method or the bundle method. However, solv- ing SOCP or SDP is computationally very expensive, which limits their use in practice. Recently, an efficient algorithm was proposed to solve the specific problem Eq. (14) by complicatedly refor- mulating the problem as a min-max problem and then applying the proximal method to solve it [25]. The reported results show that the algorithm is more efficient than existing algorithms. However, the algorithm is a gradient descent type method and converges very slow. Moreover, the algorithm is de- rived to solve the specific problem, and can not be applied directly to solve other general l2,1-norm minimization problem.In the next subsection, we will propose a very simple but at the same time much more efficient method to solve this problem. Theoretical analysis guarantees that the proposed method will con- verge to the global optimum. More importantly, this method is very easy to implement and can be readily used to solve other general l2,1-norm minimization problem.4.2 An Efficient Algorithm to Solve the Constrained ProblemThe Lagrangian function of the problem in Eq. (14) isL(U) = ∥U∥2,1 − T r(ΛT (AU − Y)). (15)4which is further equivalent tomin ∥E∥2,1 + ∥W∥2,1 s.t. XT W + γE = Y. W,ERewriting the above problem asUmin􏰂􏰂􏰂􏰂􏰅 WE 􏰆􏰂􏰂􏰂􏰂 W,E 2,1s.t. 􏰀 XT γI 􏰁􏰅 WE 􏰆=Y, whereI∈Rn×n isanidentitymatrix. Denotem=n+d. LetA=􏰀 XTU = 􏰅 WE 􏰆 ∈ Rm×c, then the problem in Eq. (13) can be written as: min ∥U∥2,1 s.t. AU = Y
Taking the derivative of L(U) w.r.t U, and setting the derivative to zero, we have:∂L(U) =2DU−ATΛ=0, (16)∂Uwhere D is a diagonal matrix with the i-th diagonal element as1dii= 1 . (17) 2∥ui∥2Left multiplying the two sides of Eq. (16) by AD−1, and using the constraint AU = Y, we have: 2AU − AD−1AT Λ = 0⇒ 2Y − AD−1AT Λ = 0⇒ Λ = 2(AD−1AT )−1Y (18) Substitute Eq. (18) into Eq. (16), we arrive at:U = D−1AT (AD−1AT )−1Y. (19)Since the problem in Eq. (14) is a convex problem, U is a global optimum solution to the problem if and only if the Eq. (19) is satisfied. Note that D is dependent to U and thus is also a unknown variable. We propose an iterative algorithm in this paper to obtain the solution U such that Eq. (19) is satisfied, and prove in the next subsection that the proposed iterative algorithm will converge to the global optimum.The algorithm is described in Algorithm 1. In each iteration, U is calculated with the current D, and then D is updated based on the current calculated U. The iteration procedure is repeated until the algorithm converges.Algorithm 1: An efficient iterative algorithm to solve the optimization problem in Eq. (14). 4.3 Algorithm AnalysisThe Algorithm 1 monotonically decreases the objective of the problem in Eq. (14) in each iteration. To prove it, we need the following lemma:Lemma1. Foranynonzerovectorsu,ut ∈Rc,thefollowinginequalityholds:Data: A ∈ Rn×m, Y ∈ Rn×cResult: U ∈ Rm×cSet t = 0. Initialize Dt ∈ Rm×m as an identity matrix repeatCalculate U = D−1AT (AD−1AT )−1Y. t+1 t tCalculate the diagonal matrix D , where the i-th diagonal element is t+1t = t + 1. until Converges1 . 2∥uit+1 ∥2∥u∥2 ∥ut ∥2∥u∥2− 2 ≤∥ut∥2− 2. (20)2 ∥ut∥2 2 ∥ut∥2 Proof. Beginning with an obvious inequality (√v − √vt)2 ≥ 0, we have√ √ 2 √ √ v √vt √ v √ vt( v− vt) ≥0⇒v−2 vvt+vt≥0⇒ v− √ ≤ ⇒ v− √ ≤ vt− √ (21)2vt 2 2vt 2vt Substitute the v and vt in Eq. (21) by ∥u∥2 and ∥ut∥2 respectively, we arrive at the Eq. (20).1When ui = 0, then dii = 0 is a subgradient of ∥U∥2,1 w.r.t. ui. However, we can not set dii = 0 when ui = 0, otherwise the derived algorithm can not be guaranteed to converge. Two methods can be used to solvethis problem. First, we will see from Eq.(19) that we only need to calculate D−1, so we can let the i-th element − 1 􏰂􏰂 i 􏰂􏰂 􏰈 1of D as 2 u 2. Second, we can regularize dii as dii = 2√(ui)T ui+ς , and the derived algorithm can beproved to minimize the regularized l2,1-norms of U (defined as n 􏰎(ui)T ui + ς) instead of the l2,1-norms i=1of U. It is easy to see that the regularized l2,1-norms of U approximates the l2,1-norms of U when ς → 0. 5
The convergence of the Algorithm 1 is summarized in the following theorem:Theorem 1. The Algorithm 1 will monotonically decrease the objective of the problem in Eq. (14) in each iteration, and converge to the global optimum of the problem.Proof. It can easily verified that Eq. (19) is the solution to the following problem:min T r(UT DU) s.t. AU = Y (22)Thus in the t iteration, which indicates thatThat is to say,UTr(UTt+1DtUt+1)≤Tr(UTt DtUt). (24) 􏰌m 􏰂􏰂uit+1 􏰂􏰂2 􏰌m 􏰂􏰂uit 􏰂􏰂222􏰂􏰂≤ 􏰂􏰂, (25)(26)Ut+1 =arg min TrUTDtU, (23) U AU=Yi=1 2􏰂uit􏰂2 i=1 2􏰂uit􏰂2where vectors uit and uit+1 denote the i-th row of matrices Ut and Ut+1, respectively.On the other hand, according to Lemma 1, for each i we have􏰂􏰂 i 􏰂􏰂 􏰂􏰂uit+1􏰂􏰂2 􏰂􏰂 i􏰂􏰂 􏰂􏰂uit􏰂􏰂2ut+1 2 − 2􏰂􏰂uit􏰂􏰂 ≤ ut 2 − 2􏰂􏰂uit􏰂􏰂 .Thus the following inequality holds:22􏰌m 􏰇􏰂􏰂 i 􏰂􏰂 􏰂􏰂uit+1􏰂􏰂2􏰍 􏰌m 􏰇􏰂􏰂 i􏰂􏰂 􏰂􏰂uit􏰂􏰂2 􏰍ut+1 2 − 2􏰂􏰂uit􏰂􏰂 ≤ ut 2 − 2􏰂􏰂uit􏰂􏰂 . (27) i=1 2 i=1 2Combining Eq. (25) and Eq. (27), we arrive atThat is to say,􏰌m 􏰂􏰂uit+1􏰂􏰂2 ≤ 􏰌m 􏰂􏰂uit􏰂􏰂2. i=1 i=1(28)(29)Z = (AD−1AT )−1Y in Eq. (19) can be efficiently obtained by solving the linear equation:∥Ut+1∥2,1 ≤ ∥Ut∥2,1 .Thus the Algorithm 1 will monotonically decrease the objective of the problem in Eq. (14) in each iteration t. In the convergence, Ut and Dt will satisfy the Eq. (19). As the problem in Eq. (14) is a convex problem, satisfying the Eq. (19) indicates that U is a global optimum solution to the problem in Eq. (14). Therefore, the Algorithm 1 will converge to the global optimum of the problem(14).Note that in each iteration, the Eq. (19) can be solved efficiently. First, D is a diagonal matrix andthus D−1 is also diagonal with the i-th diagonal element as d−1 = 2􏰂􏰂ui􏰂􏰂 . Second, the term ii 2(AD−1AT )Z = Y. (30)Empirical results show that the convergence is fast and only a few iterations are needed to converge. Therefore, the proposed method can be applied to large scale problem in practice.It is worth to point out that the proposed method can be easily extended to solve other l2,1-norm minimization problem. For example, considering a general l2,1-norm minimization problem as(31)U ∈ C (32) . Similar theoreticalanalysis can be used to prove that the iterative method will converge to a local minimum. If the problem Eq. (31) is a convex problem, i.e., f (U) is a convex function and C is a convex set, then the iterative method will converge to the global minimum.6follows: 􏰌 min f (U) +∥Ak U + Bk ∥2,1 s.t. U ∈ C The problem can be solve􏰌d by solve the following problem iteratively:Ukmin f (U) + T r((Ak U + Bk )T Dk (Ak U + Bk )) s.t.Ukwhere Dk is a diagonal matrix with the i-th diagonal element as 1i 2∥(AkU+Bk) ∥2
959085807570100 90 80 70 60 50ReliefFFscoreRank T−test Information gain mRMRRFS0 10 20 30 40 50 60 70 80the number of features selected(a) ALLAML80 100 7570 95 6560 90 5550 85ReliefFthe classification accuracythe classification accuracythe classification accuracy the classification accuracythe classification accuracy the classification accuracy40 ReliefF FscoreRank30 T−test Information gain20 mRMR RFSFscoreRank 84 T−testInformation gain 82 mRMRReliefFFscoreRankT−test75 Information gainmRMR RFS700 10 20 30 40 50 60 70 80the number of features selected(f) PROSTATE-MS100 10 20 30 40 50 60 70 80the number of features selected(d) Carcinomas80RFS0 10 20 30 40 50 60 70 80the number of features selected(e) PROSTATE-GEReliefFFscoreRank 80 T−testInformation gain 35 mRMR mRMRRFS RFS4540 T−test30 75 0 10 20 30 40 50 60 70 80the number of features selected(b) GLIOMA0 10 20 30 40 50 60 70 80the number of features selected(c) LUNG98 100 969492 90 90858886 ReliefF 80Figure 1: Classification accuracy comparisons of six feature selection algorithms on 6 data sets. SVM with 5-fold cross validation is used for classification. RFS is our method.5 Experimental ResultsIn order to validate the performance of our feature selection method, we applied our method into two bioinformatics applications, gene expression and mass spectrometry classifications. In our experi- ments, we used five publicly available microarray data sets and one Mass Spectrometry (MS) data sets: ALLAML data set [6], the malignant glioma (GLIOMA) data set [17], the human lung carcino- mas (LUNG) data set [2], Human Carcinomas (Carcinomas) data set [24, 27], Prostate Cancer gene expression (Prostate-GE) data set [23] for microarray data; and Prostate Cancer (Prostate-MS) [20] for MS data. The Support Vector Machine (SVM) classifier is employed to these data sets, using 5-fold cross-validation.5.1 Data Sets DescriptionsWe give a brief description on all data sets used in our experiments as follows.ALLAML data set contains in total 72 samples in two classes, ALL and AML, which contain 47 and 25 samples, respectively. Every sample contains 7,129 gene expression values.GLIOMA data set contains in total 50 samples in four classes, cancer glioblastomas (CG), non- cancer glioblastomas (NG), cancer oligodendrogliomas (CO) and non-cancer oligodendrogliomas (NO), which have 14, 14, 7,15 samples, respectively. Each sample has 12625 genes. Genes with minimal variations across the samples were removed. For this data set, intensity thresholds were set at 20 and 16,000 units. Genes whose expression levels varied < 100 units between samples, or varied < 3 fold between any two samples, were excluded. After preprocessing, we obtained a data set with 50 samples and 4433 genes.LUNG data set contains in total 203 samples in five classes, which have 139, 21, 20, 6,17 samples, respectively. Each sample has 12600 genes. The genes with standard deviations smaller than 50 expression units were removed and we obtained a data set with 203 samples and 3312 genes.Carcinomas data set composed of total 174 samples in eleven classes, prostate, bladder/ureter, breast, colorectal, gastroesophagus, kidney, liver, ovary, pancreas, lung adenocarcinomas, and lung squamous cell carcinoma, which have 26, 8, 26, 23, 12, 11, 7, 27, 6, 14, 14 samples, respectively. In the original data [24], each sample contains 12533 genes. In the preprocessed data set [27], there are 174 samples and 9182 genes.7FscoreRankInformation gain95
Table 1: Classification Accuracy of SVM using 5-fold cross validation. Six feature selection meth- ods are compared. RF: ReliefF, F-s: F-score, IG: Information Gain, and RFS: our method.Average accuracy of top 20 features (%) Average accuracy of top 80 features (%)RF F-s T-test IG mRMR RFS RF F-s T-test IG mRMR RFSALLAML 90.3689.1192.8693.21 93.2195.89 95.89 96.07 94.29 95.71 74 54 60 58 66 93.63 93.63 91.63 90.66 95.1 91.38 90.24 83.33 68.91 89.65 95.09 91.18 93.18 93.18 89.27 98.89 89.93 98.89 94.44 98.89 91.48 85.81 87.18 83.25 89.1094.46 97.32 66 70 94.12 96.07 87.92 93.66 86.36 95.0993.14 100 87 92.02GLIOMA 50 50 56 60 LUNG 91.68 87.7 89.22 93.1 Carcinom. 79.88 65.48 49.9 85.09 Pro-GE 92.18 95.09 92.18 92.18 Pro-MS 76.41 98.89 95.56 98.89 Average 80.09 81.04 79.29 87.0962 92.61 78.22 93.18 95.42 85.78Prostate-GE data set has in total 102 samples in two classes tumor and normal, which have 52 and 50 samples, respectively. The original data set contains 12600 genes. In our experiment, intensity thresholds were set at 100 C16000 units. Then we filtered out the genes with max/min ≤ 5 or (max-min) ≤ 50. After preprocessing, we obtained a data set with 102 samples and 5966 genes.Prostate-MS data can be obtained from the FDA-NCI Clinical Proteomics Program Databank [20]. This MS data set consists of 190 samples diagnosed as benign prostate hyperplasia, 63 samples considered as no evidence of disease, and 69 samples diagnosed as prostate cancer. The samples diagnosed as benign prostate hyperplasia as well as samples having no evidence of prostate cancer were pooled into one set making 253 control samples, whereas the other 69 samples are the cancer samples.5.2 Classification Accuracy ComparisonsAll data sets are standardized to be zero-mean and normalized by standard deviation. SVM classifier has been individually performed on all data sets using 5-fold cross-validation. We utilize the linear kernel with the parameter C = 1. We compare our feature selection method (called as RFS) to several popularly used feature selection methods in bioinformatics, such as F -statistic [4], reliefF [11, 13], mRMR [19], t-test, and information gain [21]. Because the above data sets are for multi- class classification problem, we don’t compare to l1-SVM, HHSVM and other methods that were designed for binary classification.Fig. 1 shows the classification accuracy comparisons of all five feature selection methods on six data sets. Table 1 shows the detailed experimental results using SVM. We compute the average accuracy using the top 20 and top 80 features for all feature selection approaches. Obviously our approaches outperform other methods significantly. With top 20 features, our method is around 5%-12% better than other methods all six data sets.6 ConclusionsIn this paper, we proposed a new efficient and robust feature selection method with emphasizing joint l2,1-norm minimization on both loss function and regularization. The l2,1-norm based regression loss function is robust to outliers in data points and also efficient in calculation. Motivated by previous work, the l2,1-norm regularization is used to select features across all data points with joint sparsity. We provided an efficient algorithm with proved convergence. Our method has been applied into both genomic and proteomic biomarkers discovery. Extensive empirical studies have been performed on two bioinformatics tasks, six data sets, to demonstrate the performance of our method.7 AcknowledgementsThis research was funded by US NSF-CCF-0830780, 0939187, 0917274, NSF DMS-0915228, NSF CNS-0923494, 1035913.8
References[1] A. Argyriou, T. Evgeniou, and M. Pontil. Multi-task feature learning. NIPS, pages 41–48, 2007.[2] A. Bhattacharjee, W. G. Richards, and et. al. Classification of human lung carcinomas by mRNA ex- pression profiling reveals distinct adenocarcinoma subclasses. Proceedings of the National Academy of Sciences, 98(24):13790–13795, 2001.[3] P.BradleyandO.Mangasarian.Featureselectionviaconcaveminimizationandsupportvectormachines. ICML, 1998.[4] C. Ding and H. Peng. Minimum redundancy feature selection from microarray gene expression data. Proceedings of the Computational Systems Bioinformatics, 2003.[5] C. Ding, D. Zhou, X. He, and H. Zha. R1-PCA: Rotational invariant L1-norm principal component analysis for robust subspace factorization. Proc. Int’l Conf. Machine Learning (ICML), June 2006.[6] S. P. Fodor. DNA SEQUENCING: Massively Parallel Genomics. Science, 277(5324):393–395, 1997.[7] I. Guyon and A. Elisseeff. An introduction to variable and feature selection. J. Machine Learning Re-search, 2003.[8] I. Guyon, J.Weston, S. Barnhill, and V. Vapnik. Gene selection for cancer classification using supportvector machines. Machine Learning, 46(1):389, 2002.[9] M. A. Hall and L. A. Smith. Feature selection for machine learning: Comparing a correlation-based filterapproach to the wrapper. 1999.[10] H. Huang and C. Ding. Robust tensor factorization using r1 norm. CVPR 2008, pages 1–8, 2008.[11] K. Kira and L. A. Rendell. A practical approach to feature selection. In A Practical Approach to Feature Selection, pages 249–256, 1992.[12] R.KohaviandG.H.John.Wrappersforfeaturesubsetselection.ArtificialIntelligence,97(1-2):273–324, 1997.[13] I. Kononenko. Estimating attributes: Analysis and extensions of RELIEF. In European Conference on Machine Learning, pages 171–182, 1994.[14] P. Langley. Selection of relevant features in machine learning. In AAAI Fall Symposium on Relevance, pages 140–144, 1994.[15] H. Liu and H. Motoda. Feature Selection for Knowledge Discovery and Data Mining. Springer, 1998.[16] D. Luo, C. Ding, and H. Huang. Towards structural sparsity: An explicit l2/l0 approach. ICDM, 2010.[17] C. L. Nutt, D. R. Mani, R. A. Betensky, P. Tamayo, J. G. Cairncross, C. Ladd, U. Pohl, C. Hartmann, and M. E. Mclaughlin. Gene expression-based classification of malignant gliomas correlates better with survival than histological classification. Cancer Res., 63:1602–1607, 2003.[18] G. Obozinski, B. Taskar, and M. Jordan. Multi-task feature selection. Technical report, Department of Statistics, University of California, Berkeley, 2006.[19] H. Peng, F. Long, and C. Ding. Feature selection based on mutual information: Criteria of max-depe ndency, max-relevance, and min-redundancy. IEEE Trans. Pattern Analysis and Machine Intelligence, 27, 2005.[20] P.C.PetricoinEF,OrnsteinDK.Serumproteomicpatternsfordetectionofprostatecancer.JNatlCancer Inst., 94(20):1576–8, 2002.[21] L. E. Raileanu and K. Stoffel. Theoretical comparison between the gini index and information gain criteria. Univeristy of Neuchatel, 2000.[22] Y. Saeys, I. Inza, and P. Larranaga. A review of feature selection techniques in bioinformatics. Bioinfor- matics, 23(19):2507–2517, 2007.[23] D. Singh, P. Febbo, K. Ross, and et al. Gene expression correlates of clinical prostate cancer behavior. Cancer Cell, pages 203–209, 2002.[24] A. I. Su, J. B. Welsh, L. M. Sapinoso, and et al. Molecular classification of human carcinomas by use of gene expression signatures. Cancer Research, 61:7388–7393, 2001.[25] L. Sun, J. Liu, J. Chen, and J. Ye. Efficient recovery of jointly sparse vectors. In Neural Information Processing Systems, 2009.[26] L. Wang, J. Zhu, and H. Zou. Hybrid huberized support vector machines for microarray classification. ICML, 2007.[27] K. Yang, Z. Cai, J. Li, and G. Lin. A stable gene selection in microarray data analysis. BMC Bioinfor- matics, 7:228, 2006.[28] M. Yuan and Y. Lin. Model selection and estimation in regression with grouped variables. Journal of the Royal Statistical Society: Series B, 68:49–67, 2005.9